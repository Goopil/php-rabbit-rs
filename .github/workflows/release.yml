name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  RUST_VERSION: 1.89.0
  RELEASE_DIR: dist

jobs:
  build-linux-gnu:
    name: linux-gnu (php ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.3", "8.4"]
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config zip

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize, php-config, composer
          coverage: none

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Install PHP test dependencies
        working-directory: php/tests
        run: composer install --no-interaction --no-progress

      - name: Build extension
        run: |
          export EXT_PHP_RS_PHP_CONFIG="$(command -v php-config)"
          cargo build --release --locked

      - name: Package artifact
        run: |
          mkdir -p "${RELEASE_DIR}"
          ARCH="$(uname -m)"
          scripts/package-extension.sh \
            "target/release/librabbit_rs.so" \
            "${{ matrix.php-version }}" \
            "linux-gnu-${ARCH}" \
            "${GITHUB_REF_NAME:-$(git rev-parse --short HEAD)}" \
            "${RELEASE_DIR}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-gnu-php${{ matrix.php-version }}
          path: |
            ${{ env.RELEASE_DIR }}/rabbit_rs-linux-gnu-*.zip
            ${{ env.RELEASE_DIR }}/rabbit_rs-linux-gnu-*.sha256

  build-linux-alpine:
    name: linux-alpine (php ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    needs: build-linux-gnu
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build \
            -f docker/linux-alpine/Dockerfile \
            --build-arg PHP_VERSION=${{ matrix.php-version }} \
            --build-arg RUST_VERSION=${{ env.RUST_VERSION }} \
            -t rabbit-rs-linux-alpine:${{ matrix.php-version }} .

      - name: Extract artifact
        run: |
          mkdir -p "${RELEASE_DIR}"
          CID="$(docker create rabbit-rs-linux-alpine:${{ matrix.php-version }})"
          docker cp "${CID}:/artifacts/rabbit_rs.so" "${RELEASE_DIR}/rabbit_rs.so"
          docker rm "${CID}"

      - name: Package artifact
        run: |
          ARCH="$(uname -m)"
          scripts/package-extension.sh \
            "${RELEASE_DIR}/rabbit_rs.so" \
            "${{ matrix.php-version }}" \
            "linux-musl-${ARCH}" \
            "${GITHUB_REF_NAME:-$(git rev-parse --short HEAD)}" \
            "${RELEASE_DIR}"
          rm -f "${RELEASE_DIR}/rabbit_rs.so"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-musl-php${{ matrix.php-version }}
          path: |
            ${{ env.RELEASE_DIR }}/rabbit_rs-linux-musl-*.zip
            ${{ env.RELEASE_DIR }}/rabbit_rs-linux-musl-*.sha256

  build-macos:
    name: macOS (php ${{ matrix.php-version }} | ${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}
    needs: build-linux-alpine
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
        runner: ["macos-13", "macos-14"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize, php-config, composer
          coverage: none

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Install PHP test dependencies
        working-directory: php-tests
        run: composer install --no-interaction --no-progress

      - name: Build extension
        run: |
          export EXT_PHP_RS_PHP_CONFIG="$(command -v php-config)"
          cargo build --release --locked

      - name: Package artifact
        run: |
          mkdir -p "${RELEASE_DIR}"
          ARCH="$(uname -m)"
          scripts/package-extension.sh \
            "target/release/librabbit_rs.dylib" \
            "${{ matrix.php-version }}" \
            "darwin-${ARCH}" \
            "${GITHUB_REF_NAME:-$(git rev-parse --short HEAD)}" \
            "${RELEASE_DIR}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: darwin-${{ matrix.runner }}-php${{ matrix.php-version }}
          path: |
            ${{ env.RELEASE_DIR }}/rabbit_rs-darwin-*.zip
            ${{ env.RELEASE_DIR }}/rabbit_rs-darwin-*.sha256

  publish:
    needs:
      - build-linux-gnu
      - build-linux-alpine
      - build-macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: aggregated-artifacts

      - name: Collate checksums
        run: |
          cd aggregated-artifacts
          find . -name '*.sha256' -print0 | sort -z | xargs -0 cat > SHA256SUMS

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            aggregated-artifacts/**/*.zip
            aggregated-artifacts/**/*.sha256
            aggregated-artifacts/SHA256SUMS
          generate_release_notes: true
