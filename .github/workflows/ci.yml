name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.89.0

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install linters
        run: rustup component add rustfmt && rustup component add clippy

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.3"]
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config docker-compose

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize, php-config, composer
          coverage: none

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.89.0

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Composer downloads
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/composer
            php/tests/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('php/tests/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP test dependencies
        working-directory: php/tests
        run: composer install --no-interaction --no-progress

      - name: Cargo test
        run: cargo test --all

      - name: Cargo Build
        run: cargo build

      - name: PHP integration tests
        run: chmod +x ./run-test.sh && ./run-test.sh
